(:PCODE 1
 (:HASH-TABLE 1 32 1.5 1.0 EQUALP NIL
  (:VAR?
   (:LIST 2 T (:LIST 3) (:REFERENCE 3) (:REFERENCE 3) (:REFERENCE 3)
    (:REFERENCE 3))
   :ASSIGNATION? (:LIST 4 T T (:REFERENCE 3) (:REFERENCE 3)) :ATOM?
   (:LIST 5 (:REFERENCE 3) T T T T) :EVAL-ATOM (:LIST 6 1 2 :TRUE :FALSE 42)
   :EVAL/ATOM (:LIST 7 1 2 :TRUE :FALSE 42)
   (:LIST 8
    (:LIST 9 LET (:LIST 10 (:LIST 11 ENV (:LIST 12 MAKE-ENV)))
     (:LIST 13 EVAL (:LIST 14 QUOTE (:LIST 15 SET X 1)) ENV)
     (:LIST 16 EVAL (:LIST 17 QUOTE (:LIST 18 SET Y FALSE)) ENV)
     (:LIST 19 HASH-TABLE-PLIST ENV)))
   (:LIST 20 (:LIST 21 Y :FALSE X 1))
   (:LIST 22
    (:LIST 23 LET (:LIST 24 (:LIST 25 ENV (:LIST 26 MAKE-ENV)))
     (:LIST 27 EVAL (:LIST 28 QUOTE (:LIST 29 SET X 1)) ENV)
     (:LIST 30 EVAL (:LIST 31 QUOTE (:LIST 32 SET X (:LIST 33 - X 1))) ENV)
     (:LIST 34 HASH-TABLE-PLIST ENV)))
   (:LIST 35 (:LIST 36 X 0)) :BOOL?
   (:LIST 37 T T T T (:REFERENCE 3) (:REFERENCE 3))
   (:LIST 38
    (:LIST 39 RESULTS
     (:LIST 40 EVAL (:LIST 41 QUOTE (:LIST 42 2 3 4)) (:LIST 43 MAKE-ENV))
     (:LIST 44 EVAL (:LIST 45 QUOTE (:LIST 46 (:LIST 47 + 1 2))))
     (:LIST 48 EVAL (:LIST 49 QUOTE (:LIST 50 (:LIST 51 + X 2)))
      (:LIST 52 MAKE-ENV (:LIST 53 QUOTE (:LIST 54 X 2))))))
   (:LIST 55 4 3 4)
   (:LIST 56
    (:LIST 57 RESULTS (:LIST 58 EVAL (:LIST 59 QUOTE (:LIST 60 NOT FALSE)))
     (:LIST 61 EVAL (:LIST 62 QUOTE (:LIST 63 NOT TRUE)))))
   (:LIST 64 :TRUE :FALSE)
   (:LIST 65
    (:LIST 66 MAPCAR (:LIST 67 QUOTE EVAL)
     (:LIST 68 TRUTH-TABLE (:LIST 69 QUOTE OR) 2)))
   (:LIST 70 (:LIST 71 :TRUE :TRUE :TRUE :FALSE))
   (:LIST 72
    (:LIST 73 MAPCAR (:LIST 74 QUOTE EVAL)
     (:LIST 75 TRUTH-TABLE (:LIST 76 QUOTE AND) 2)))
   (:LIST 77 (:LIST 78 :FALSE :FALSE :FALSE :TRUE))
   (:LIST 79 (:LIST 80 TO-BOOL (:LIST 81 QUOTE TRUE))
    (:LIST 82 TO-BOOL (:LIST 83 QUOTE FALSE)) (:LIST 84 TO-BOOL (:REFERENCE 3))
    (:LIST 85 TRUEP (:LIST 86 QUOTE TRUE))
    (:LIST 87 TRUEP (:LIST 88 QUOTE FALSE)))
   (:LIST 89 (:REFERENCE 3))
   (:LIST 90
    (:LIST 91 RESULTS (:LIST 92 TO-BOOL (:LIST 93 QUOTE TRUE))
     (:LIST 94 TO-BOOL (:LIST 95 QUOTE FALSE))
     (:LIST 96 TO-BOOL (:REFERENCE 3)) (:LIST 97 TRUEP (:LIST 98 QUOTE TRUE))
     (:LIST 99 TRUEP (:LIST 100 QUOTE FALSE))))
   (:LIST 101 :TRUE :TRUE :FALSE T (:REFERENCE 3))
   (:LIST 102
    (:LIST 103 RESULTS (:LIST 104 TO-BOOL (:LIST 105 QUOTE TRUE))
     (:LIST 106 TO-BOOL (:LIST 107 QUOTE ANYTHING))
     (:LIST 108 TO-BOOL (:LIST 109 QUOTE FALSE))
     (:LIST 110 TO-BOOL (:REFERENCE 3))
     (:LIST 111 TRUEP (:LIST 112 QUOTE TRUE))
     (:LIST 113 TRUEP (:LIST 114 QUOTE FALSE))))
   (:LIST 115 :TRUE :TRUE :TRUE :FALSE T (:REFERENCE 3))
   (:LIST 116
    (:LIST 117 RESULTS (:LIST 118 EVAL (:LIST 119 + 1 2))
     (:LIST 120 EVAL (:LIST 121 * 2 2))
     (:LIST 122 EVAL (:LIST 123 QUOTE (:LIST 124 + X 1))
      (:LIST 125 MAKE-ENV (:LIST 126 QUOTE (:LIST 127 X 0))))
     (:LIST 128 EVAL (:LIST 129 QUOTE (:LIST 130 - X 1))
      (:LIST 131 MAKE-ENV (:LIST 132 QUOTE (:LIST 133 X 0))))
     (:LIST 134 EVAL (:LIST 135 QUOTE (:LIST 136 * X 1))
      (:LIST 137 MAKE-ENV (:LIST 138 QUOTE (:LIST 139 X 0))))
     (:LIST 140 EVAL (:LIST 141 QUOTE (:LIST 142 / X 5))
      (:LIST 143 MAKE-ENV (:LIST 144 QUOTE (:LIST 145 X 2))))
     (:LIST 146 EVAL (:LIST 147 QUOTE (:LIST 148 < X 1))
      (:LIST 149 MAKE-ENV (:LIST 150 QUOTE (:LIST 151 X 0))))
     (:LIST 152 EVAL (:LIST 153 QUOTE (:LIST 154 > X 1))
      (:LIST 155 MAKE-ENV (:LIST 156 QUOTE (:LIST 157 X 0))))
     (:LIST 158 EVAL (:LIST 159 QUOTE (:LIST 160 = X 1))
      (:LIST 161 MAKE-ENV (:LIST 162 QUOTE (:LIST 163 X 0))))
     (:LIST 164 EVAL (:LIST 165 QUOTE (:LIST 166 = X 1))
      (:LIST 167 MAKE-ENV (:LIST 168 QUOTE (:LIST 169 X 1))))
     (:LIST 170 EVAL (:LIST 171 QUOTE (:LIST 172 = 1 2)))
     (:LIST 173 EVAL (:LIST 174 QUOTE (:LIST 175 = 1 1 1 1)))))
   (:LIST 176 3 4 1 -1 0 0 :TRUE :FALSE :FALSE :TRUE :FALSE :TRUE)
   (:LIST 177
    (:LIST 178 RESULTS (:LIST 179 EVAL (:LIST 180 + 1 2))
     (:LIST 181 EVAL (:LIST 182 * 2 2))
     (:LIST 183 EVAL (:LIST 184 QUOTE (:LIST 185 + X 1))
      (:LIST 186 MAKE-ENV (:LIST 187 QUOTE (:LIST 188 X 0))))
     (:LIST 189 EVAL (:LIST 190 QUOTE (:LIST 191 - X 1))
      (:LIST 192 MAKE-ENV (:LIST 193 QUOTE (:LIST 194 X 0))))
     (:LIST 195 EVAL (:LIST 196 QUOTE (:LIST 197 * X 1))
      (:LIST 198 MAKE-ENV (:LIST 199 QUOTE (:LIST 200 X 0))))
     (:LIST 201 EVAL (:LIST 202 QUOTE (:LIST 203 / X 5))
      (:LIST 204 MAKE-ENV (:LIST 205 QUOTE (:LIST 206 X 2))))
     (:LIST 207 EVAL (:LIST 208 QUOTE (:LIST 209 MOD 10 2)))
     (:LIST 210 EVAL (:LIST 211 QUOTE (:LIST 212 MOD 11 3)))
     (:LIST 213 EVAL (:LIST 214 QUOTE (:LIST 215 < X 1))
      (:LIST 216 MAKE-ENV (:LIST 217 QUOTE (:LIST 218 X 0))))
     (:LIST 219 EVAL (:LIST 220 QUOTE (:LIST 221 > X 1))
      (:LIST 222 MAKE-ENV (:LIST 223 QUOTE (:LIST 224 X 0))))
     (:LIST 225 EVAL (:LIST 226 QUOTE (:LIST 227 = X 1))
      (:LIST 228 MAKE-ENV (:LIST 229 QUOTE (:LIST 230 X 0))))
     (:LIST 231 EVAL (:LIST 232 QUOTE (:LIST 233 = X 1))
      (:LIST 234 MAKE-ENV (:LIST 235 QUOTE (:LIST 236 X 1))))
     (:LIST 237 EVAL (:LIST 238 QUOTE (:LIST 239 = 1 2)))
     (:LIST 240 EVAL (:LIST 241 QUOTE (:LIST 242 = 1 1 1 1)))))
   (:LIST 243 3 4 1 -1 0 0 0 2 :TRUE :FALSE :FALSE :TRUE :FALSE :TRUE)
   (:LIST 244
    (:LIST 245 LET
     (:LIST 246
      (:LIST 247 ENV (:LIST 248 MAKE-ENV (:LIST 249 QUOTE (:LIST 250 X 5)))))
     (:LIST 251 EVAL
      (:LIST 252 QUOTE
       (:LIST 253 WHILE (:LIST 254 > X 0) (:LIST 255 SET X (:LIST 256 - X 1))))
      ENV)
     (:LIST 257 HASH-TABLE-PLIST ENV)))
   (:LIST 258 (:LIST 259 X 0))
   (:LIST 260
    (:LIST 261 RESULTS
     (:LIST 262 LET (:LIST 263 (:LIST 264 ENV (:LIST 265 MAKE-ENV)))
      (:LIST 266 EVAL-DEF (:LIST 267 QUOTE (:LIST 268 DEF X (:LIST 269 + 1 2)))
       ENV)
      (:LIST 270 HASH-TABLE-PLIST ENV))
     (:LIST 271 LET
      (:LIST 272
       (:LIST 273 ENV (:LIST 274 MAKE-ENV (:LIST 275 QUOTE (:LIST 276 X 5)))))
      (:LIST 277 EVAL-DEF (:LIST 278 QUOTE (:LIST 279 DEF X (:LIST 280 + 1 2)))
       ENV)
      (:LIST 281 HASH-TABLE-PLIST ENV))))
   (:LIST 282 (:LIST 283 X (:LIST 284 (:REFERENCE 269)))
    (:LIST 285 X (:LIST 286 (:REFERENCE 280))))
   (:LIST 287
    (:LIST 288 RESULTS
     (:LIST 289 LET (:LIST 290 (:LIST 291 ENV (:LIST 292 MAKE-ENV)))
      (:LIST 293 EVAL (:LIST 294 QUOTE (:LIST 295 DEF X (:LIST 296 + 1 2)))
       ENV)
      (:LIST 297 HASH-TABLE-PLIST ENV))
     (:LIST 298 LET
      (:LIST 299
       (:LIST 300 ENV (:LIST 301 MAKE-ENV (:LIST 302 QUOTE (:LIST 303 X 5)))))
      (:LIST 304 EVAL (:LIST 305 QUOTE (:LIST 306 DEF X (:LIST 307 + 1 2)))
       ENV)
      (:LIST 308 HASH-TABLE-PLIST ENV))
     (:LIST 309 LET (:LIST 310 (:LIST 311 ENV (:LIST 312 MAKE-ENV)))
      (:LIST 313 EVAL
       (:LIST 314 QUOTE
        (:LIST 315 DEF X (:LIST 316 A)
         (:LIST 317 (:LIST 318 SET A (:LIST 319 + 1 A)) (:LIST 320 * A 2))))
       ENV)
      (:LIST 321 HASH-TABLE-PLIST ENV))))
   (:LIST 322 (:LIST 323 X (:LIST 324 (:REFERENCE 296)))
    (:LIST 325 X (:LIST 326 (:REFERENCE 307)))
    (:LIST 327 X (:LIST 328 (:REFERENCE 316) (:REFERENCE 317))))
   (:LIST 329
    (:LIST 330 RESULTS
     (:LIST 331 LET (:LIST 332 (:LIST 333 ENV (:LIST 334 MAKE-ENV)))
      (:LIST 335 EVAL (:LIST 336 QUOTE (:LIST 337 DEF X (:LIST 338 + 1 2)))
       ENV)
      (:LIST 339 HASH-TABLE-PLIST ENV))
     (:LIST 340 LET
      (:LIST 341
       (:LIST 342 ENV (:LIST 343 MAKE-ENV (:LIST 344 QUOTE (:LIST 345 X 5)))))
      (:LIST 346 EVAL (:LIST 347 QUOTE (:LIST 348 DEF X (:LIST 349 + 1 2)))
       ENV)
      (:LIST 350 HASH-TABLE-PLIST ENV))))
   (:LIST 351 (:LIST 352 X (:LIST 353 (:REFERENCE 338)))
    (:LIST 354 X (:LIST 355 (:REFERENCE 349))))
   (:LIST 356
    (:LIST 357 RESULTS
     (:LIST 358 EVAL-FUNCALL (:LIST 359 QUOTE (:LIST 360 F 2))
      (:LIST 361 MAKE-ENV
       (:LIST 362 QUOTE (:LIST 363 F (:LIST 364 (:LIST 365 A) A)))))
     (:LIST 366 EVAL-FUNCALL (:LIST 367 QUOTE (:LIST 368 F 2))
      (:LIST 369 MAKE-ENV
       (:LIST 370 QUOTE
        (:LIST 371 F (:LIST 372 (:LIST 373 A) (:LIST 374 + 1 A))))))))
   (:LIST 375 2 3))))